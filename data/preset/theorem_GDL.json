{
	"Theorems": {
		"line_addition": {
			"1": {
				"premise": "Collinear(ABC)",
				"conclusion": [
					"Equal(LengthOfLine(AC),Add(LengthOfLine(AB),LengthOfLine(BC)))"
				]
			}
		},
		"angle_addition": {
			"1": {
				"premise": "Angle(ABC)&Angle(CBD)",
				"conclusion": [
					"Equal(MeasureOfAngle(ABD),Add(MeasureOfAngle(ABC),MeasureOfAngle(CBD)))"
				]
			}
		},
		"congruent_property_angle_equal": {
			"1": {
				"premise": "Congruent(ABC,DEF)",
				"conclusion": [
					"Equal(MeasureOfAngle(ABC),MeasureOfAngle(DEF))"
				]
			},
			"2": {
				"premise": "MirrorCongruent(ABC,DEF)",
				"conclusion": [
					"Equal(MeasureOfAngle(ABC),MeasureOfAngle(EFD))"
				]
			}
		},
		"perpendicular_property_collinear_extend": {
			"1": {
				"premise": "Collinear(AOB)&Perpendicular(AO,CO)",
				"conclusion": [
					"Perpendicular(CO,BO)"
				]
			},
			"2": {
				"premise": "Collinear(AOB)&Perpendicular(CO,BO)",
				"conclusion": [
					"Perpendicular(AO,CO)"
				]
			}
		},
		"right_triangle_judgment_angle": {
			"1": {
				"premise": "Triangle(ABC)&(Perpendicular(AB,CB)|Equal(MeasureOfAngle(ABC),90))",
				"conclusion": [
					"RightTriangle(ABC)"
				]
			}
		},
		"pythagorean": {
			"1": {
				"premise": "RightTriangle(ABC)",
				"conclusion": [
					"Equal(Add(Pow(LengthOfLine(AB),2),Pow(LengthOfLine(BC),2)),Pow(LengthOfLine(AC),2))"
				]
			}
		},
		"triangle_property_equal_line_to_equal_angle": {
			"1": {
				"premise": "Triangle(ABC)&Equal(LengthOfLine(AB),LengthOfLine(AC))",
				"conclusion": [
					"Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCA))"
				]
			},
			"2": {
				"premise": "Triangle(ABC)&Equal(MeasureOfAngle(ABC),MeasureOfAngle(BCA))",
				"conclusion": [
					"Equal(LengthOfLine(AB),LengthOfLine(AC))"
				]
			}
		},
		"triangle_perimeter_formula": {
			"1": {
				"premise": "Triangle(ABC)",
				"conclusion": [
					"Equal(PerimeterOfTriangle(ABC),Add(LengthOfLine(AB),LengthOfLine(BC),LengthOfLine(CA)))"
				]
			}
		},
		"triangle_property_angle_sum": {
			"1": {
				"premise": "Triangle(ABC)",
				"conclusion": [
					"Equal(Add(MeasureOfAngle(ABC),MeasureOfAngle(BCA),MeasureOfAngle(CAB)),180)"
				]
			}
		},
		"sine_theorem": {
			"1": {
				"premise": "Triangle(ABC)",
				"conclusion": [
					"Equal(Mul(LengthOfLine(BC),Sin(MeasureOfAngle(ABC))),Mul(LengthOfLine(AC),Sin(MeasureOfAngle(CAB))))"
				]
			}
		},
		"cosine_theorem": {
			"1": {
				"premise": "Triangle(ABC)",
				"conclusion": [
					"Equal(Add(Pow(LengthOfLine(AC),2),Mul(2,LengthOfLine(BC),LengthOfLine(AB),Cos(MeasureOfAngle(ABC)))),Add(Pow(LengthOfLine(BC),2),Pow(LengthOfLine(AB),2)))"
				]
			}
		},
		"right_triangle_property_special_rt_30_60": {
			"1": {
				"premise": "RightTriangle(ABC)&(Equal(MeasureOfAngle(CAB),30)|Equal(MeasureOfAngle(BCA),60))",
				"conclusion": [
					"Equal(LengthOfLine(AB),Mul(LengthOfLine(BC),1.7321))",
					"Equal(LengthOfLine(AC),Mul(LengthOfLine(BC),2))"
				]
			},
			"2": {
				"premise": "RightTriangle(ABC)&(Equal(MeasureOfAngle(CAB),60)|Equal(MeasureOfAngle(BCA),30))",
				"conclusion": [
					"Equal(LengthOfLine(BC),Mul(LengthOfLine(AB),1.7321))",
					"Equal(LengthOfLine(AC),Mul(LengthOfLine(AB),2))"
				]
			}
		},
		"neutrality_property_line_ratio": {
			"1": {
				"premise": "Neutrality(DE,ABC)",
				"conclusion": [
					"Equal(Mul(LengthOfLine(AD),LengthOfLine(EC)),Mul(LengthOfLine(DB),LengthOfLine(AE)))"
				]
			}
		},
		"neutrality_judgment": {
			"1": {
				"premise": "Triangle(ABC)&Collinear(ADB)&Collinear(AEC)&Parallel(DE,BC)",
				"conclusion": [
					"Neutrality(DE,ABC)"
				]
			}
		},
		"similar_property_line_ratio": {
			"1": {
				"premise": "Similar(ABC,DEF)",
				"conclusion": [
					"Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(DE),LengthOfLine(BC)))"
				]
			},
			"2": {
				"premise": "MirrorSimilar(ABC,DEF)",
				"conclusion": [
					"Equal(Mul(LengthOfLine(AB),LengthOfLine(EF)),Mul(LengthOfLine(FD),LengthOfLine(BC)))"
				]
			}
		},
		"incenter_property_intersect": {
			"1": {
				"premise": "Incenter(O,ABC)",
				"conclusion": [
					"Bisector(AO,CAB)"
				]
			}
		},
		"bisector_judgment_angle_equal": {
			"1": {
				"premise": "Angle(ABD)&Angle(DBC)&Equal(MeasureOfAngle(ABD),MeasureOfAngle(DBC))",
				"conclusion": [
					"Bisector(BD,ABC)"
				]
			}
		},
		"bisector_property_line_ratio": {
			"1": {
				"premise": "Bisector(BD,ABC)&Collinear(CDA)",
				"conclusion": [
					"Equal(Mul(LengthOfLine(CD),LengthOfLine(BA)),Mul(LengthOfLine(DA),LengthOfLine(BC)))"
				]
			}
		},
		"isosceles_triangle_judgment_equilateral": {
			"1": {
				"premise": "EquilateralTriangle(ABC)",
				"conclusion": [
					"IsoscelesTriangle(ABC)"
				]
			}
		},
		"isosceles_triangle_property_line_coincidence": {
			"1": {
				"premise": "IsoscelesTriangle(ABC)&IsAltitude(AM,ABC)",
				"conclusion": [
					"Median(AM,ABC)",
					"Bisector(AM,CAB)"
				]
			},
			"2": {
				"premise": "IsoscelesTriangle(ABC)&Median(AM,ABC)",
				"conclusion": [
					"IsAltitude(AM,ABC)",
					"Bisector(AM,CAB)"
				]
			},
			"3": {
				"premise": "IsoscelesTriangle(ABC)&Collinear(BMC)&Bisector(AM,CAB)",
				"conclusion": [
					"IsAltitude(AM,ABC)",
					"Median(AM,ABC)"
				]
			}
		}
	},
	"Version": "1.2"
}